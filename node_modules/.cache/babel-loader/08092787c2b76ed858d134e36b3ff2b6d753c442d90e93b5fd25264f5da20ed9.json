{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DTech-assessment/src/components/ProfileManager.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport TextInput from \"./TextInput\";\nimport FileInput from \"./FileInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  max-width: 600px;\n  margin: auto;\n  padding: 20px;\n  background: #f7f7f7;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n_c = FormContainer;\nconst SectionTitle = styled.h3`\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n_c2 = SectionTitle;\nconst DateSction = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 80%;\nflex-wrap: wrap;\n`;\n_c3 = DateSction;\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c4 = SubmitButton;\nconst AddButton = styled.button`\n  width: 200px;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c5 = AddButton;\nconst defaultValues = {\n  personalInfo: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\"\n  },\n  experiences: [{\n    role: \"\",\n    company: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  }],\n  skills: [{\n    name: \"\"\n  }],\n  resume: null\n};\nconst ProfileManager = () => {\n  _s();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    defaultValues,\n    mode: \"onChange\"\n  });\n  const {\n    fields: experienceFields,\n    append: addExperience\n  } = useFieldArray({\n    control,\n    name: \"experiences\"\n  });\n  const {\n    fields: skillFields,\n    append: addSkill\n  } = useFieldArray({\n    control,\n    name: \"skills\"\n  });\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"personalInfo.firstName\",\n        rules: {\n          required: \"First name is required\"\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => {\n          var _errors$personalInfo, _errors$personalInfo$;\n          return /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"First Name\",\n            placeholder: \"Enter your first name\",\n            type: \"text\",\n            onChange: onChange,\n            value: value,\n            error: (_errors$personalInfo = errors.personalInfo) === null || _errors$personalInfo === void 0 ? void 0 : (_errors$personalInfo$ = _errors$personalInfo.firstName) === null || _errors$personalInfo$ === void 0 ? void 0 : _errors$personalInfo$.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"personalInfo.lastName\",\n        rules: {\n          required: \"Last name is required\"\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => {\n          var _errors$personalInfo2, _errors$personalInfo3;\n          return /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Last Name\",\n            placeholder: \"Enter your last name\",\n            type: \"text\",\n            onChange: onChange,\n            value: value,\n            error: (_errors$personalInfo2 = errors.personalInfo) === null || _errors$personalInfo2 === void 0 ? void 0 : (_errors$personalInfo3 = _errors$personalInfo2.lastName) === null || _errors$personalInfo3 === void 0 ? void 0 : _errors$personalInfo3.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"personalInfo.email\",\n        rules: {\n          required: \"Email is required\",\n          pattern: {\n            value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n            message: \"Invalid email format\"\n          }\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => {\n          var _errors$personalInfo4, _errors$personalInfo5;\n          return /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Email\",\n            placeholder: \"Enter your email\",\n            type: \"email\",\n            onChange: onChange,\n            value: value,\n            error: (_errors$personalInfo4 = errors.personalInfo) === null || _errors$personalInfo4 === void 0 ? void 0 : (_errors$personalInfo5 = _errors$personalInfo4.email) === null || _errors$personalInfo5 === void 0 ? void 0 : _errors$personalInfo5.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"personalInfo.phone\",\n        rules: {\n          required: \"Phone number is required\"\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => {\n          var _errors$personalInfo6, _errors$personalInfo7;\n          return /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Phone\",\n            placeholder: \"Enter your phone number\",\n            type: \"text\",\n            onChange: onChange,\n            value: value,\n            error: (_errors$personalInfo6 = errors.personalInfo) === null || _errors$personalInfo6 === void 0 ? void 0 : (_errors$personalInfo7 = _errors$personalInfo6.phone) === null || _errors$personalInfo7 === void 0 ? void 0 : _errors$personalInfo7.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Professional Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), experienceFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `experiences.${index}.role`,\n          rules: {\n            required: \"Role is required\"\n          },\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => {\n            var _errors$experiences, _errors$experiences$i, _errors$experiences$i2;\n            return /*#__PURE__*/_jsxDEV(TextInput, {\n              label: \"Role\",\n              placeholder: \"Enter your role\",\n              type: \"text\",\n              onChange: onChange,\n              value: value,\n              error: (_errors$experiences = errors.experiences) === null || _errors$experiences === void 0 ? void 0 : (_errors$experiences$i = _errors$experiences[index]) === null || _errors$experiences$i === void 0 ? void 0 : (_errors$experiences$i2 = _errors$experiences$i.role) === null || _errors$experiences$i2 === void 0 ? void 0 : _errors$experiences$i2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `experiences.${index}.company`,\n          rules: {\n            required: \"Company is required\"\n          },\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => {\n            var _errors$experiences2, _errors$experiences2$, _errors$experiences2$2;\n            return /*#__PURE__*/_jsxDEV(TextInput, {\n              label: \"Company\",\n              placeholder: \"Enter the company\",\n              type: \"text\",\n              onChange: onChange,\n              value: value,\n              error: (_errors$experiences2 = errors.experiences) === null || _errors$experiences2 === void 0 ? void 0 : (_errors$experiences2$ = _errors$experiences2[index]) === null || _errors$experiences2$ === void 0 ? void 0 : (_errors$experiences2$2 = _errors$experiences2$.company) === null || _errors$experiences2$2 === void 0 ? void 0 : _errors$experiences2$2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DateSction, {\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: `experiences.${index}.startDate`,\n            rules: {\n              required: \"Start date is required\"\n            },\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$experiences3, _errors$experiences3$, _errors$experiences3$2;\n              return /*#__PURE__*/_jsxDEV(TextInput, {\n                label: \"Start Date\",\n                placeholder: \"Enter start date\",\n                type: \"date\",\n                onChange: onChange,\n                value: value,\n                error: (_errors$experiences3 = errors.experiences) === null || _errors$experiences3 === void 0 ? void 0 : (_errors$experiences3$ = _errors$experiences3[index]) === null || _errors$experiences3$ === void 0 ? void 0 : (_errors$experiences3$2 = _errors$experiences3$.startDate) === null || _errors$experiences3$2 === void 0 ? void 0 : _errors$experiences3$2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: `experiences.${index}.endDate`,\n            rules: {\n              required: \"End date is required\"\n            },\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$experiences4, _errors$experiences4$, _errors$experiences4$2;\n              return /*#__PURE__*/_jsxDEV(TextInput, {\n                label: \"End Date\",\n                placeholder: \"Enter end date\",\n                type: \"date\",\n                onChange: onChange,\n                value: value,\n                error: (_errors$experiences4 = errors.experiences) === null || _errors$experiences4 === void 0 ? void 0 : (_errors$experiences4$ = _errors$experiences4[index]) === null || _errors$experiences4$ === void 0 ? void 0 : (_errors$experiences4$2 = _errors$experiences4$.endDate) === null || _errors$experiences4$2 === void 0 ? void 0 : _errors$experiences4$2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n        type: \"button\",\n        onClick: () => addExperience({\n          role: \"\",\n          company: \"\",\n          startDate: \"\",\n          endDate: \"\"\n        }),\n        children: \"Add Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), skillFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `skills.${index}.name`,\n          rules: {\n            required: \"Skill name is required\"\n          },\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => {\n            var _errors$skills, _errors$skills$index, _errors$skills$index$;\n            return /*#__PURE__*/_jsxDEV(TextInput, {\n              label: \"Skill\",\n              placeholder: \"Enter a skill\",\n              type: \"text\",\n              onChange: onChange,\n              value: value,\n              error: (_errors$skills = errors.skills) === null || _errors$skills === void 0 ? void 0 : (_errors$skills$index = _errors$skills[index]) === null || _errors$skills$index === void 0 ? void 0 : (_errors$skills$index$ = _errors$skills$index.name) === null || _errors$skills$index$ === void 0 ? void 0 : _errors$skills$index$.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n        type: \"button\",\n        onClick: () => addSkill({\n          name: \"\"\n        }),\n        children: \"Add Skill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"resume\",\n        rules: {\n          required: \"Resume is required\",\n          validate: {\n            fileSize: value => {\n              if (!value) return \"File is required\";\n              return value.size <= 2 * 1024 * 1024 || \"File size should be less than 2MB\";\n            },\n            fileType: value => {\n              if (!value) return \"File is required\";\n              return [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(value.type) || \"Only PDF and Word documents are accepted\";\n            }\n          }\n        },\n        render: ({\n          field: {\n            onChange\n          }\n        }) => {\n          var _errors$resume;\n          return /*#__PURE__*/_jsxDEV(FileInput, {\n            label: \"Resume\",\n            onChange: e => {\n              var _e$target$files;\n              const file = ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null; // Use null as fallback\n              onChange(file);\n            },\n            error: (_errors$resume = errors.resume) === null || _errors$resume === void 0 ? void 0 : _errors$resume.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        disabled: !isValid || !isDirty,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileManager, \"MBZBZTGNdl1azvNytZo2EnHWuMg=\", false, function () {\n  return [useForm, useFieldArray, useFieldArray];\n});\n_c6 = ProfileManager;\nexport default ProfileManager;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"DateSction\");\n$RefreshReg$(_c4, \"SubmitButton\");\n$RefreshReg$(_c5, \"AddButton\");\n$RefreshReg$(_c6, \"ProfileManager\");","map":{"version":3,"names":["React","useForm","Controller","useFieldArray","styled","TextInput","FileInput","jsxDEV","_jsxDEV","FormContainer","div","_c","SectionTitle","h3","_c2","DateSction","_c3","SubmitButton","button","_c4","AddButton","_c5","defaultValues","personalInfo","firstName","lastName","email","phone","experiences","role","company","startDate","endDate","skills","name","resume","ProfileManager","_s","control","handleSubmit","formState","errors","isDirty","isValid","mode","fields","experienceFields","append","addExperience","skillFields","addSkill","onSubmit","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","rules","required","render","field","onChange","value","_errors$personalInfo","_errors$personalInfo$","label","placeholder","type","error","message","_errors$personalInfo2","_errors$personalInfo3","pattern","_errors$personalInfo4","_errors$personalInfo5","_errors$personalInfo6","_errors$personalInfo7","map","index","_errors$experiences","_errors$experiences$i","_errors$experiences$i2","_errors$experiences2","_errors$experiences2$","_errors$experiences2$2","_errors$experiences3","_errors$experiences3$","_errors$experiences3$2","_errors$experiences4","_errors$experiences4$","_errors$experiences4$2","id","onClick","_errors$skills","_errors$skills$index","_errors$skills$index$","validate","fileSize","size","fileType","includes","_errors$resume","e","_e$target$files","file","target","files","disabled","_c6","$RefreshReg$"],"sources":["/Users/mac/Desktop/DTech-assessment/src/components/ProfileManager.tsx"],"sourcesContent":["import React from \"react\";\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport TextInput from \"./TextInput\";\nimport FileInput from \"./FileInput\";\nimport { ProfileData } from \"../types/index\";\n\nconst FormContainer = styled.div`\n  max-width: 600px;\n  margin: auto;\n  padding: 20px;\n  background: #f7f7f7;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst SectionTitle = styled.h3`\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nconst DateSction = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 80%;\nflex-wrap: wrap;\n`\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst AddButton = styled.button`\n  width: 200px;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst defaultValues: ProfileData = {\n  personalInfo: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n  },\n  experiences: [\n    { role: \"\", company: \"\", startDate: \"\", endDate: \"\" },\n  ],\n  skills: [\n    { name: \"\" },\n  ],\n  resume: null,\n};\n\nconst ProfileManager: React.FC = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm<ProfileData>({\n    defaultValues,\n    mode: \"onChange\",\n  });\n\n  const { fields: experienceFields, append: addExperience } = useFieldArray({\n    control,\n    name: \"experiences\",\n  });\n\n  const { fields: skillFields, append: addSkill } = useFieldArray({\n    control,\n    name: \"skills\",\n  });\n\n  const onSubmit = (data: ProfileData) => {\n    console.log(data);\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h2>Personal Information</h2>\n        <SectionTitle>Personal Information</SectionTitle>\n        <Controller\n          control={control}\n          name=\"personalInfo.firstName\"\n          rules={{ required: \"First name is required\" }}\n          render={({ field: { onChange, value } }) => (\n            <TextInput\n              label=\"First Name\"\n              placeholder=\"Enter your first name\"\n              type=\"text\"\n              onChange={onChange}\n              value={value}\n              error={errors.personalInfo?.firstName?.message}\n            />\n          )}\n        />\n        <Controller\n          control={control}\n          name=\"personalInfo.lastName\"\n          rules={{ required: \"Last name is required\" }}\n          render={({ field: { onChange, value } }) => (\n            <TextInput\n              label=\"Last Name\"\n              placeholder=\"Enter your last name\"\n              type=\"text\"\n              onChange={onChange}\n              value={value}\n              error={errors.personalInfo?.lastName?.message}\n            />\n          )}\n        />\n        <Controller\n          control={control}\n          name=\"personalInfo.email\"\n          rules={{\n            required: \"Email is required\",\n            pattern: {\n              value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n              message: \"Invalid email format\",\n            },\n          }}\n          render={({ field: { onChange, value } }) => (\n            <TextInput\n              label=\"Email\"\n              placeholder=\"Enter your email\"\n              type=\"email\"\n              onChange={onChange}\n              value={value}\n              error={errors.personalInfo?.email?.message}\n            />\n          )}\n        />\n        <Controller\n          control={control}\n          name=\"personalInfo.phone\"\n          rules={{ required: \"Phone number is required\" }}\n          render={({ field: { onChange, value } }) => (\n            <TextInput\n              label=\"Phone\"\n              placeholder=\"Enter your phone number\"\n              type=\"text\"\n              onChange={onChange}\n              value={value}\n              error={errors.personalInfo?.phone?.message}\n            />\n          )}\n        />\n\n        <h2>Professional Experiences</h2>\n        {experienceFields.map((field, index) => (\n          <div key={field.id}>\n            <Controller\n              control={control}\n              name={`experiences.${index}.role`}\n              rules={{ required: \"Role is required\" }}\n              render={({ field: { onChange, value } }) => (\n                <TextInput\n                  label=\"Role\"\n                  placeholder=\"Enter your role\"\n                  type=\"text\"\n                  onChange={onChange}\n                  value={value}\n                  error={errors.experiences?.[index]?.role?.message}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name={`experiences.${index}.company`}\n              rules={{ required: \"Company is required\" }}\n              render={({ field: { onChange, value } }) => (\n                <TextInput\n                  label=\"Company\"\n                  placeholder=\"Enter the company\"\n                  type=\"text\"\n                  onChange={onChange}\n                  value={value}\n                  error={errors.experiences?.[index]?.company?.message}\n                />\n              )}\n            />\n            <DateSction>\n              <Controller\n                control={control}\n                name={`experiences.${index}.startDate`}\n                rules={{ required: \"Start date is required\" }}\n                render={({ field: { onChange, value } }) => (\n                  <TextInput\n                    label=\"Start Date\"\n                    placeholder=\"Enter start date\"\n                    type=\"date\"\n                    onChange={onChange}\n                    value={value}\n                    error={errors.experiences?.[index]?.startDate?.message}\n                  />\n                )}\n              />\n              <Controller\n                control={control}\n                name={`experiences.${index}.endDate`}\n                rules={{ required: \"End date is required\" }}\n                render={({ field: { onChange, value } }) => (\n                  <TextInput\n                    label=\"End Date\"\n                    placeholder=\"Enter end date\"\n                    type=\"date\"\n                    onChange={onChange}\n                    value={value}\n                    error={errors.experiences?.[index]?.endDate?.message}\n                  />\n                )}\n              />\n            </DateSction>\n          </div>\n        ))}\n        <AddButton\n          type=\"button\"\n          onClick={() =>\n            addExperience({ role: \"\", company: \"\", startDate: \"\", endDate: \"\" })\n          }\n        >\n          Add Experience\n        </AddButton>\n\n        <h2>Skills</h2>\n        {skillFields.map((field, index) => (\n          <div key={field.id}>\n            <Controller\n              control={control}\n              name={`skills.${index}.name`}\n              rules={{ required: \"Skill name is required\" }}\n              render={({ field: { onChange, value } }) => (\n                <TextInput\n                  label=\"Skill\"\n                  placeholder=\"Enter a skill\"\n                  type=\"text\"\n                  onChange={onChange}\n                  value={value}\n                  error={errors.skills?.[index]?.name?.message}\n                />\n              )}\n            />\n          </div>\n        ))}\n        <AddButton type=\"button\" onClick={() => addSkill({ name: \"\" })}>\n          Add Skill\n        </AddButton>\n\n        <h2>Resume</h2>\n        <Controller\n          control={control}\n          name=\"resume\"\n          rules={{\n            required: \"Resume is required\",\n            validate: {\n              fileSize: (value) => {\n                if (!value) return \"File is required\";\n\n                return (\n                  value.size <= 2 * 1024 * 1024 ||\n                  \"File size should be less than 2MB\"\n                );\n              },\n              fileType: (value) => {\n                if (!value) return \"File is required\";\n\n                return (\n                  [\n                    \"application/pdf\",\n                    \"application/msword\",\n                    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                  ].includes(value.type) ||\n                  \"Only PDF and Word documents are accepted\"\n                );\n              },\n            },\n          }}\n          render={({ field: { onChange } }) => (\n            <FileInput\n              label=\"Resume\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                const file = e.target.files?.[0] || null; // Use null as fallback\n                onChange(file);\n              }}\n              error={errors.resume?.message}\n            />\n          )}\n        />\n        <SubmitButton type=\"submit\" disabled={!isValid || !isDirty}>\n          Submit\n        </SubmitButton>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default ProfileManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}